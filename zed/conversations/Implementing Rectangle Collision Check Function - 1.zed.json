{"id":"df7481fd-1d20-4ed5-99f5-1b15666c751b","zed":"context","version":"0.4.0","text":"\n\n\n#pragma once\n#include \"raylib.h\"\n#include \"collisions.h\"\n\n\n\n\n\n bool CheckCollision(Rectangle& Rect1, Rectangle& Rect2, float& prevX, float& prevY) {\n      if (CheckCollisionRecs(\n          Rectangle{Rect1.x, Rect1.y, Rect1.width, Rect1.height},\n          Rectangle{Rect2.x, Rect2.y, Rect2.width, Rect2.height})) {\n\n          Rect1.x = prevX;\n          Rect1.y = prevY;\n          return true;\n      }\n      return false;\n  }\nhow would i write this in game.cpp\nIn your game.cpp file, you can call the `CheckCollision` function like this:\n\n```cpp\n// In your game.cpp\n\n// First, make sure to include the header file where CheckCollision is declared\n#include \"collisions.h\"\n\n// Inside your game loop or update function:\nfloat prevX = player.rect.x;  // Store previous X position\nfloat prevY = player.rect.y;  // Store previous Y position\n\n// Update player position here (movement code)\nplayer.rect.x += moveX;\nplayer.rect.y += moveY;\n\n// Check collision with another rectangle (like a wall or obstacle)\nif (CheckCollision(player.rect, obstacle.rect, prevX, prevY)) {\n    // Collision occurred\n    // The player will be moved back to their previous position automatically\n    // Add any additional collision response here\n}\n```\n\nHere's a more complete example:\n\n```cpp\n// game.cpp\n#include \"raylib.h\"\n#include \"collisions.h\"\n\nclass Player {\npublic:\n    Rectangle rect;\n    // other player properties...\n};\n\nclass Wall {\npublic:\n    Rectangle rect;\n    // other wall properties...\n};\n\nvoid UpdateGame() {\n    Player player;\n    Wall wall;\n    \n    // Store previous position before movement\n    float prevX = player.rect.x;\n    float prevY = player.rect.y;\n    \n    // Update player position based on input\n    if (IsKeyDown(KEY_RIGHT)) player.rect.x += 5.0f;\n    if (IsKeyDown(KEY_LEFT)) player.rect.x -= 5.0f;\n    if (IsKeyDown(KEY_UP)) player.rect.y -= 5.0f;\n    if (IsKeyDown(KEY_DOWN)) player.rect.y += 5.0f;\n    \n    // Check collision with wall\n    if (CheckCollision(player.rect, wall.rect, prevX, prevY)) {\n        // Collision occurred\n        // Player has already been moved back to previous position\n        // Add any additional collision response here\n    }\n}\n```\n\nKey points to remember:\n1. Store the previous position before moving the object\n2. Update the object's position\n3. Check for collision using the stored previous position\n4. If collision occurs, the object will automatically be moved back to its previous position\n\nMake sure your collisions.h file properly declares the CheckCollision function and that both files are properly included in your build system.\n","messages":[{"id":{"replica_id":0,"value":0},"start":0,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":61}}},{"id":{"replica_id":0,"value":10},"start":462,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":62}}},{"id":{"replica_id":0,"value":11},"start":2583,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":63}}}],"summary":"Implementing Rectangle Collision Check Function","slash_command_output_sections":[{"range":{"start":0,"end":1},"icon":"Library","label":"Default","metadata":null}]}
{"id":"babdfbb9-84bd-44e5-ad22-12c4e1c6f526","zed":"context","version":"0.4.0","text":"\n\n\nim setting up a bush in my game and i want it to loop through the sprite frames when the player is near it but only when the player is moving and colliding this is what ive got so far \n#include <raylib.h>\n#include <bush.h>\n\nstatic const int NUM_FRAMES = 3;\nBush::Bush(const char* texturePath)\n{\n    texture = LoadTexture(texturePath);\n    \n    frameHeight = (float)texture.height/NUM_FRAMES;\n    frameWidth = (float)texture.width;\n    sourceRec = {0, 0, (float)texture.width, frameHeight};\n    bushBounds = {position.x, position.y, (float)texture.width, frameHeight};\n    \n}\n\nHere's an example of how you could modify your Bush class to animate when the player is near and moving:\n\n```cpp\n#include <raylib.h>\n#include \"bush.h\"\n\nclass Bush {\nprivate:\n    Texture2D texture;\n    Rectangle sourceRec;\n    Rectangle bushBounds;\n    Vector2 position;\n    float frameHeight;\n    float frameWidth;\n    float frameTimer;\n    int currentFrame;\n    static const int NUM_FRAMES = 3;\n    static const float FRAME_SPEED = 0.2f; // Seconds per frame\n\npublic:\n    Bush(const char* texturePath, Vector2 pos) {\n        texture = LoadTexture(texturePath);\n        position = pos;\n        \n        frameHeight = (float)texture.height/NUM_FRAMES;\n        frameWidth = (float)texture.width;\n        sourceRec = {0, 0, frameWidth, frameHeight};\n        bushBounds = {position.x, position.y, frameWidth, frameHeight};\n        \n        frameTimer = 0.0f;\n        currentFrame = 0;\n    }\n\n    void Update(Rectangle playerBounds, bool isPlayerMoving) {\n        // Check if player is near (you can adjust the distance)\n        float detectionRadius = 50.0f; // Adjust this value as needed\n        Vector2 bushCenter = {position.x + frameWidth/2, position.y + frameHeight/2};\n        Vector2 playerCenter = {playerBounds.x + playerBounds.width/2, \n                              playerBounds.y + playerBounds.height/2};\n        \n        float distance = Vector2Distance(bushCenter, playerCenter);\n        \n        // If player is near, moving, and colliding\n        if (distance < detectionRadius && \n            isPlayerMoving && \n            CheckCollisionRecs(playerBounds, bushBounds)) {\n            \n            // Update animation\n            \n            frameTimer += GetFrameTime();\n            if (frameTimer >= FRAME_SPEED) {\n                frameTimer = 0.0f;\n                currentFrame++;\n                if (currentFrame >= NUM_FRAMES) currentFrame = 0;\n                \n                // Update the source rectangle for animation\n                sourceRec.y = currentFrame * frameHeight;\n            }\n        }\n    }\n\n\n    void Draw() {\n        DrawTextureRec(texture, sourceRec, position, WHITE);\n    }\n\n    ~Bush() {\n        UnloadTexture(texture);\n    }\n};\n```\n\nAnd here's how you would use it in your main game loop:\n\n```cpp\n// In your game initialization\nVector2 bushPosition = {100, 100};\nBush bush(\"path_to_bush_texture.png\", bushPosition);\n\n// In your game loop\nbool isPlayerMoving = false; // Set this based on your player's movement state\nRectangle playerBounds = {/* player position and size */};\n\n// Update\nisPlayerMoving = /* check if player is moving */;\nbush.Update(playerBounds, isPlayerMoving);\n\n// Draw\nbush.Draw();\n```\n\nKey points in this implementation:\n\n1. Added a frame timer and current frame counter to handle animation\n2. Added position as a constructor parameter\n3. Created an Update method that checks:\n   - If the player is within a certain radius\n   - If the player is moving\n   - If the player is colliding with the bush\n4. The animation only updates when all conditions are met\n5. The animation cycles through frames by updating the sourceRec.y position\n\nYou'll need to:\n1. Adjust the `detectionRadius` to match your game's scale\n2. Set up the `isPlayerMoving` boolean based on your player's movement state\n3. Provide the correct player bounds\n4. Adjust `FRAME_SPEED` to control how fast the animation plays\n\nMake sure your bush texture is set up as a vertical sprite sheet with the frames stacked on top of each other.\n","messages":[{"id":{"replica_id":0,"value":0},"start":0,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":144}}},{"id":{"replica_id":0,"value":43},"start":579,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":145}}},{"id":{"replica_id":0,"value":44},"start":4044,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":146}}}],"summary":"Bush Animation Trigger Near Player","slash_command_output_sections":[{"range":{"start":0,"end":1},"icon":"Library","label":"Default","metadata":null}]}
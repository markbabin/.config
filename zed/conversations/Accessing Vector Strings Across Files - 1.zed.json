{"id":"e73927a1-19d2-4d00-b538-67c5401ad0d3","zed":"context","version":"0.4.0","text":"\n\n\n#include \"globals.h\"\n#include <string>\n\ngameState currentGameState = BATTLE_PHASE;\n// Basic Combos\nstd::string knightsForm = \"02\";\nstd::string guardiansForm = \"01\";\nstd::string templarsForm = \"21\";\n\n// 2-Face Combos\nstd::string dualBlades = \"22\";\nstd::string shieldWall = \"11\";\nstd::string cavalryCharge = \"00\";\nstd::string lancersStrike = \"24\";\nstd::string pikeFormation = \"41\";\nstd::string mountedGuard = \"01\";\nstd::string cavalryStrike = \"02\";\nstd::string warriorsDefense = \"21\";\n\n// 3-Face Combos\nstd::string bladeMastery = \"222\";\nstd::string fortress = \"111\";\nstd::string stampede = \"000\";\nstd::string bladeStorm = \"224\";\nstd::string fortifiedPosition = \"110\";\nstd::string mountedSquadron = \"002\";\nstd::string phalanx = \"114\";\nstd::string knightsCharge = \"024\";\nstd::string mountedDefense = \"014\";\nstd::string battleFormation = \"214\";\nstd::string royalGuard = \"012\";\n\n// 4-Face Combos\nstd::string swordLegion = \"2222\";\nstd::string shieldLegion = \"1111\";\nstd::string cavalryLegion = \"0000\";\nstd::string grandAssault = \"2224\";\nstd::string grandDefense = \"1110\";\nstd::string grandCavalry = \"0002\";\nstd::string battleWall = \"2211\";\nstd::string perfectStrike = \"0214\";\nstd::string royalFormation = \"0021\";\nstd::string castleDefense = \"1104\";\nstd::string warParty = \"2201\";\n\n\nstd::vector<std::string> combos = {\n    knightsForm, guardiansForm, templarsForm,\n    dualBlades, shieldWall, cavalryCharge,\n    lancersStrike, pikeFormation,\n    mountedGuard, cavalryStrike, warriorsDefense,\n    bladeMastery, fortress, stampede,\n    bladeStorm, fortifiedPosition, mountedSquadron,\n    phalanx, knightsCharge, mountedDefense,\n    battleFormation, royalGuard, swordLegion,\n    shieldLegion, cavalryLegion, grandAssault,\n    grandDefense, grandCavalry, battleWall,\n    perfectStrike, royalFormation, castleDefense,\n    warParty\n};\nhow would i acces this vector of strings in a different projects file \nTo access this vector of strings in a different file within your project, you'll need to:\n\n1. Declare the vector as `extern` in a header file (e.g., `globals.h`):\n\n```cpp\n// globals.h\n#pragma once\n#include <vector>\n#include <string>\n\nextern std::vector<std::string> combos;\n```\n\n2. Keep the definition (the actual initialization) in your source file (e.g., `globals.cpp`):\n\n```cpp\n// globals.cpp\n#include \"globals.h\"\n\nstd::vector<std::string> combos = {\n    knightsForm, guardiansForm, templarsForm,\n    // ... rest of your combo definitions ...\n};\n```\n\n3. Then in any other file where you want to use the vector, simply include the header file:\n\n```cpp\n// someotherfile.cpp\n#include \"globals.h\"\n\nvoid someFunction() {\n    // Now you can access combos here\n    for(const auto& combo : combos) {\n        // Do something with combo\n    }\n}\n```\n\nThe `extern` keyword tells the compiler that the variable is defined somewhere else in the program. This way, you can declare the variable in a header file and define it in exactly one source file, while being able to access it from any file that includes the header.\n\nMake sure to:\n1. Only define the vector once in a source file\n2. Include the header file wherever you need to access the vector\n3. Keep the `extern` declaration in the header file\n\nThis is a common way to share global variables across different files in a C++ project.\n","messages":[{"id":{"replica_id":0,"value":0},"start":0,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":39}}},{"id":{"replica_id":0,"value":21},"start":1895,"metadata":{"role":"assistant","status":"Done","timestamp":{"replica_id":0,"value":40}}},{"id":{"replica_id":0,"value":22},"start":3276,"metadata":{"role":"user","status":"Done","timestamp":{"replica_id":0,"value":41}}}],"summary":"Accessing Vector Strings Across Files","slash_command_output_sections":[{"range":{"start":0,"end":1},"icon":"Library","label":"Default","metadata":null}]}